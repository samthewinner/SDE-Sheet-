class Solution{
  public:
  
  int getLength(Node* head){
      Node* temp=head;
      int i=0;
      while(temp){
          temp=temp->next;
          i++;
      }
      return i;
  }
  
    //Function to check whether the list is palindrome.
    bool isPalindrome(Node *head)
    {
        if(!head || head->next ==NULL) return true;
        int l = getLength(head);
        bool isEven;
        isEven = l%2==0 ? true:false;
        
        Node*fast,*slow,*prev;
        fast=slow=head;
        prev=NULL;
        
        while(fast && fast->next){
            fast=fast->next->next;
            prev=slow;
            slow=slow->next;
        }
        Node*head1;
        if(isEven){
            prev->next=NULL;
            head1 = slow;
        }
        else{
            prev->next=NULL;
            head1 = slow->next;
        }
        
        prev=NULL;
        Node* curr,*n;
        curr=head1;
        while(curr){
            n=curr->next;
            curr->next=prev;
            prev=curr;
            curr=n;
        }
        head1=prev;
        slow=head;
        fast=head1;
        while(slow && fast){
            if(slow->data != fast->data) return false;
            slow=slow->next;
            fast=fast->next;
        }
        return true;
        
    }
};
